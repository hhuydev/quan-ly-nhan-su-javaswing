package UI;

import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import Dao.DepartmentDAO;
import Entity.*;
import Util.ValidateFormTools;

import java.util.List;
import java.util.Vector;

public class PnlAdminDepartmentManage extends javax.swing.JPanel {

	/** Tạo mới form ManageDepartment */
	public PnlAdminDepartmentManage() {
		initComponents();

		loadTableData();

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		pnlTop = new javax.swing.JPanel();
		pnlEditDepartment = new javax.swing.JPanel();
		btnUpdate = new javax.swing.JButton();
		tfEditDepartmentID = new javax.swing.JTextField();
		jLabel4 = new javax.swing.JLabel();
		tfEditDepartmentName = new javax.swing.JTextField();
		jLabel3 = new javax.swing.JLabel();
		btnDelete = new javax.swing.JButton();
		pnlAddDepartment = new javax.swing.JPanel();
		btnAddNew = new javax.swing.JButton();
		tfAddDepartmentID = new javax.swing.JTextField();
		tfAddDepartmentName = new javax.swing.JTextField();
		jLabel6 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		pnlBottom = new javax.swing.JPanel();
		spnlDepartmentData = new javax.swing.JScrollPane();
		tblData = new org.jdesktop.swingx.JXTable();

		setPreferredSize(new java.awt.Dimension(600, 600));
		setLayout(new java.awt.BorderLayout());

		pnlTop.setLayout(new java.awt.BorderLayout());

		pnlEditDepartment.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Edit Department",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Calibri", 1, 12))); // NOI18N
		pnlEditDepartment.setPreferredSize(new java.awt.Dimension(707, 80));

		btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_save.png"))); // NOI18N
		btnUpdate.setText("Save");
		btnUpdate.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnUpdateActionPerformed(evt);
			}
		});

		tfEditDepartmentID.setEditable(false);
		tfEditDepartmentID.setEnabled(false);

		jLabel4.setText("Department ID:");

		jLabel3.setText("Department Name:");

		btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_delete.png"))); // NOI18N
		btnDelete.setText("Delete");
		btnDelete.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnDeleteActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout pnlEditDepartmentLayout = new javax.swing.GroupLayout(pnlEditDepartment);
		pnlEditDepartment.setLayout(pnlEditDepartmentLayout);
		pnlEditDepartmentLayout.setHorizontalGroup(pnlEditDepartmentLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnlEditDepartmentLayout.createSequentialGroup().addContainerGap().addComponent(jLabel4)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(tfEditDepartmentID, javax.swing.GroupLayout.PREFERRED_SIZE, 59,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(18, 18, 18).addComponent(jLabel3).addGap(4, 4, 4)
						.addComponent(tfEditDepartmentName, javax.swing.GroupLayout.PREFERRED_SIZE, 196,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(18, 18, 18)
						.addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(btnDelete)
						.addContainerGap(36, Short.MAX_VALUE)));

		pnlEditDepartmentLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL,
				new java.awt.Component[] { btnDelete, btnUpdate });

		pnlEditDepartmentLayout.setVerticalGroup(pnlEditDepartmentLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnlEditDepartmentLayout.createSequentialGroup().addContainerGap()
						.addGroup(pnlEditDepartmentLayout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel4)
								.addComponent(tfEditDepartmentID, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel3)
								.addComponent(tfEditDepartmentName, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btnUpdate).addComponent(btnDelete))
						.addContainerGap(18, Short.MAX_VALUE)));

		pnlTop.add(pnlEditDepartment, java.awt.BorderLayout.CENTER);

		pnlAddDepartment.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Create Department",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Calibri", 1, 12))); // NOI18N
		pnlAddDepartment.setPreferredSize(new java.awt.Dimension(707, 80));

		btnAddNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_add.png"))); // NOI18N
		btnAddNew.setText("Add");
		btnAddNew.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnAddNewActionPerformed(evt);
			}
		});

		tfAddDepartmentID.setEditable(false);
		tfAddDepartmentID.setEnabled(false);

		jLabel6.setText("Department ID:");

		jLabel5.setText("Department Name:");

		javax.swing.GroupLayout pnlAddDepartmentLayout = new javax.swing.GroupLayout(pnlAddDepartment);
		pnlAddDepartment.setLayout(pnlAddDepartmentLayout);
		pnlAddDepartmentLayout.setHorizontalGroup(
				pnlAddDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(pnlAddDepartmentLayout.createSequentialGroup().addContainerGap().addComponent(jLabel6)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(tfAddDepartmentID, javax.swing.GroupLayout.PREFERRED_SIZE, 59,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(18, 18, 18).addComponent(jLabel5).addGap(4, 4, 4)
								.addComponent(tfAddDepartmentName, javax.swing.GroupLayout.PREFERRED_SIZE, 196,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(18, 18, 18).addComponent(btnAddNew, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addContainerGap(146, Short.MAX_VALUE)));
		pnlAddDepartmentLayout.setVerticalGroup(pnlAddDepartmentLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnlAddDepartmentLayout.createSequentialGroup().addContainerGap()
						.addGroup(pnlAddDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(btnAddNew).addComponent(jLabel6)
								.addComponent(tfAddDepartmentID, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel5).addComponent(tfAddDepartmentName,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap(18, Short.MAX_VALUE)));

		pnlTop.add(pnlAddDepartment, java.awt.BorderLayout.PAGE_START);

		add(pnlTop, java.awt.BorderLayout.PAGE_START);

		pnlBottom.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "List Department",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Calibri", 1, 12))); // NOI18N
		pnlBottom.setLayout(new java.awt.BorderLayout());

		spnlDepartmentData.setBorder(null);

		tblData.setModel(
				new javax.swing.table.DefaultTableModel(
						new Object[][] { { null, null, null, null }, { null, null, null, null },
								{ null, null, null, null }, { null, null, null, null } },
						new String[] { "Title 1", "Title 2", "Title 3", "Title 4" }));
		tblData.setFont(new java.awt.Font("Calibri", 1, 14));
		tblData.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				tblDataMouseClicked(evt);
			}
		});
		tblData.addInputMethodListener(new java.awt.event.InputMethodListener() {
			public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
				tblDataCaretPositionChanged(evt);
			}

			public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
			}
		});
		tblData.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyPressed(java.awt.event.KeyEvent evt) {
				tblDataKeyPressed(evt);
			}

			public void keyReleased(java.awt.event.KeyEvent evt) {
				tblDataKeyReleased(evt);
			}

			public void keyTyped(java.awt.event.KeyEvent evt) {
				tblDataKeyTyped(evt);
			}
		});
		spnlDepartmentData.setViewportView(tblData);

		pnlBottom.add(spnlDepartmentData, java.awt.BorderLayout.CENTER);

		add(pnlBottom, java.awt.BorderLayout.CENTER);
	}// </editor-fold>//GEN-END:initComponents

	private void btnAddNewActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAddNewActionPerformed
		if (validateAddNew()) {
			Department deptObj = new Department();
			deptObj.setDepartmentID(0);
			deptObj.setDepartmentName(tfAddDepartmentName.getText());

			try {
				DepartmentDAO.insertDepartment(deptObj);
				JOptionPane.showMessageDialog(null, "Create success");
				loadTableData();
				tfAddDepartmentName.setText("");
			} catch (SQLException ex) {
				JOptionPane.showMessageDialog(null, "Can not create new Department!", "Error", JOptionPane.ERROR_MESSAGE);
				ex.printStackTrace();
			} catch (ClassNotFoundException ex) {
				JOptionPane.showMessageDialog(null, "Can not create new Department!", "Error", JOptionPane.ERROR_MESSAGE);
				ex.printStackTrace();
			}
		}

	}// GEN-LAST:event_btnAddNewActionPerformed

	private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tblDataMouseClicked
		getEditData();
	}// GEN-LAST:event_tblDataMouseClicked

	private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnUpdateActionPerformed
		if (tfEditDepartmentID.getText().compareTo("") != 0) {
			if (validateEdit()) {
				Department deptObj = new Department();
				deptObj.setDepartmentID(Integer.parseInt(tfEditDepartmentID.getText()));
				deptObj.setDepartmentName(tfEditDepartmentName.getText());

				try {
					DepartmentDAO.updateDepartment(deptObj);
					JOptionPane.showMessageDialog(null, "Edit success");
					loadTableData();
				} catch (SQLException ex) {
					JOptionPane.showMessageDialog(null, "Can not edit this Department!", "Error", JOptionPane.ERROR_MESSAGE);
					ex.printStackTrace();
				} catch (ClassNotFoundException ex) {
					JOptionPane.showMessageDialog(null, "Can not edit this Department!", "Error", JOptionPane.ERROR_MESSAGE);
					ex.printStackTrace();
				}
			}
		} else {
			JOptionPane.showMessageDialog(null, "You must select a row!", "No row selected",
					JOptionPane.INFORMATION_MESSAGE);
		}
	}// GEN-LAST:event_btnUpdateActionPerformed

	private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnDeleteActionPerformed
		if (tblData.getSelectedRowCount() != 0) {
			if (validateDelete()) {// Ensure
				if (JOptionPane.showConfirmDialog(null, "Do you want delete this Department?", "Confirm delete",
						JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
					try {

						DepartmentDAO.deleteDepartment(Integer.parseInt(tfEditDepartmentID.getText()));
						JOptionPane.showMessageDialog(null, "Delete success!");
						loadTableData();
						tfEditDepartmentID.setText("");
						tfEditDepartmentName.setText("");

					} catch (SQLException ex) {
						JOptionPane.showMessageDialog(null, "Can not delete this Department!", "Error", JOptionPane.ERROR_MESSAGE);
						ex.printStackTrace();
					} catch (ClassNotFoundException ex) {
						JOptionPane.showMessageDialog(null, "Can not delete this Department!", "Error", JOptionPane.ERROR_MESSAGE);
						ex.printStackTrace();
					}

				}
			}
		}
	}// GEN-LAST:event_btnDeleteActionPerformed

	private void tblDataCaretPositionChanged(java.awt.event.InputMethodEvent evt) {// GEN-FIRST:event_tblDataCaretPositionChanged
	}// GEN-LAST:event_tblDataCaretPositionChanged

	private void tblDataKeyPressed(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_tblDataKeyPressed
	}// GEN-LAST:event_tblDataKeyPressed

	private void tblDataKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_tblDataKeyTyped
	}// GEN-LAST:event_tblDataKeyTyped

	private void tblDataKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_tblDataKeyReleased
		getEditData();
	}// GEN-LAST:event_tblDataKeyReleased

	// Xác nhận hình thức trước khi ADDnew
	private boolean validateAddNew() {
		String msg = "";
		/* Kiểm tra tên phòng ban có trống? */
		if (!ValidateFormTools.isFilledTextField(tfAddDepartmentName, true))// cắt các văn bản trong tfAddDepartmentName
																			// , kiểm tra trống
		{
			msg += "\n- Department's Name cannot be blank!";
		}
		tfAddDepartmentName.setText(tfAddDepartmentName.getText().trim());

		if (msg.compareTo("") != 0) {
			JOptionPane.showMessageDialog(null, "Has an error " + msg, "Error", JOptionPane.ERROR_MESSAGE);
			return false;
		} else {
			return true;
		}
	}

	// Xác nhận xóa Phòng ban nếu Phòng ban không có nhân viên
	private boolean validateDelete() {
		int rowIndex = tblData.getSelectedRow();
		int id = Integer.parseInt(tblModel.getValueAt(rowIndex, 0).toString());
		String nameDepartment = String.valueOf(tblModel.getValueAt(rowIndex, 1));
		int numberOfEmpl = Integer.parseInt(tblModel.getValueAt(rowIndex, 2).toString());
//        int ToNo = Integer.parseInt(tblModel.getValueAt(rowIndex, 2).toString());
//        int FromNo = Integer.parseInt(tblModel.getValueAt(rowIndex, 4).toString());
		if (id != 0 && numberOfEmpl == 0)// Đảm bảo không có đối tượng phụ thuộc
		{
			return true;
		} else {
			JOptionPane.showMessageDialog(null,
					"You can not delete this Department! Epmloyee working in there!", "Error",
					JOptionPane.ERROR_MESSAGE);
			return false;
		}
	}

	// Nhận dữ liệu từ hàng chọn và tải dữ liệu vào bảng chỉnh sửa
	private void getEditData() {
		int rowIndex = tblData.getSelectedRow();
		tfEditDepartmentID.setText(tblModel.getValueAt(rowIndex, 0).toString());
		tfEditDepartmentName.setText(tblModel.getValueAt(rowIndex, 1).toString());
//        tfEdit.setText(tblModel.getValueAt(rowIndex, 1).toString());
	}

	// Xác định đk trước khi thực hiện chỉnh sửa
	private boolean validateEdit() {
		String msg = "";
		if (!ValidateFormTools.isFilledTextField(tfEditDepartmentName, true))// cắt các văn bản trong
																				// tftfEditDepartmentName, kiểm tra
																				// trống
		{
			msg += "\n- Department's Name cannot be blank!";
		}
		tfEditDepartmentName.setText(tfEditDepartmentName.getText().trim());
		if (msg.compareTo("") != 0) {
			JOptionPane.showMessageDialog(null, "Has an error " + msg, "Edit error", JOptionPane.ERROR_MESSAGE);
			return false;
		} else {
			return true;
		}
	}

	// Tải dữ liệu vào bảng
	private void loadTableData() {
		try {
			List<Department> departmentList = DepartmentDAO.selectAllDepartment();
			tblModel = new DefaultTableModel();
			tblModel.addColumn("Department ID");
			tblModel.addColumn("Department Name");
			tblModel.addColumn("Number ");
			for (Department department : departmentList) {
				Vector<String> row = new Vector<String>();
				row.addElement(String.valueOf(department.getDepartmentID()));
				row.addElement(department.getDepartmentName());
				row.addElement(String.valueOf(department.getNumOfEmployee()));
				tblModel.addRow(row);
			}
			tblData.setModel(tblModel);
		} catch (ClassNotFoundException ex) {
			JOptionPane.showMessageDialog(null,
					"Can not load Department's data from database!", "Error", JOptionPane.ERROR_MESSAGE);
			ex.printStackTrace();
		} catch (SQLException ex) {
			JOptionPane.showMessageDialog(null, "Can not load Department's data from database!", "Error",
					JOptionPane.ERROR_MESSAGE);
			ex.printStackTrace();
		}

	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnAddNew;
	private javax.swing.JButton btnDelete;
	private javax.swing.JButton btnUpdate;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JPanel pnlAddDepartment;
	private javax.swing.JPanel pnlBottom;
	private javax.swing.JPanel pnlEditDepartment;
	private javax.swing.JPanel pnlTop;
	private javax.swing.JScrollPane spnlDepartmentData;
	private org.jdesktop.swingx.JXTable tblData;
	private javax.swing.JTextField tfAddDepartmentID;
	private javax.swing.JTextField tfAddDepartmentName;
	private javax.swing.JTextField tfEditDepartmentID;
	private javax.swing.JTextField tfEditDepartmentName;
	// End of variables declaration//GEN-END:variables
	DefaultTableModel tblModel = new DefaultTableModel();
}
