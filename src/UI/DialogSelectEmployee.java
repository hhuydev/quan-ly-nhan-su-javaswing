package UI;

import java.awt.Frame;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

import Dao.DepartmentDAO;
import Dao.EmployeeDAO;
import Dao.LocationDAO;
import Dao.ProjectDAO;
import Entity.*;
import Util.ValidateFormTools;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.List;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class DialogSelectEmployee extends javax.swing.JDialog {

	DefaultTableModel tblModel;
	public Employee selectedEmp = null;

	/** tạo mới form SelectEmployeeDialog */
	public DialogSelectEmployee(java.awt.Frame parent, boolean modal) {
		super(parent, modal);

		initComponents();
		loadDataToComboBox();

		mdlTable = new DefaultTableModel();
		tblData.setModel(mdlTable);

		// Trung tâm
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		int height = screenSize.height;
		int width = screenSize.width;
		setBounds((width - this.getWidth()) / 2, (height - this.getHeight()) / 2, 640, 480);
		setIconImage((new ImageIcon("wire_transfer.png")).getImage());
	}

	List<Location> locationLst;
	List<Department> departmentLst;
	List<Project> projectLst;
	List<Employee> empLst;
	DefaultTableModel mdlTable;

	private void loadDataToComboBox() {
		try {
			/* Tải Địa chỉ */
			locationLst = LocationDAO.selectAllLocation();
			cboLocation.removeAllItems();
			cboLocation.addItem("All Locations");
			for (Location location : locationLst) {
				cboLocation.addItem(location.getLocationName());
			}

			/* Tải Phòng ban */
			departmentLst = DepartmentDAO.selectAllDepartment();
			cboDepartment.removeAllItems();
			cboDepartment.addItem("All Departments");
			for (Department dept : departmentLst) {
				cboDepartment.addItem(dept.getDepartmentName());
			}

			/* Tải dự án */
			projectLst = ProjectDAO.selectAllProject();
			cboProject.removeAllItems();
			cboProject.addItem("All Projects");
			for (Project proj : projectLst) {
				cboProject.addItem(proj.getProjectName());
			}

		} catch (SQLException ex) {
			Logger.getLogger(DialogSelectEmployee.class.getName()).log(Level.SEVERE, null, ex);
		} catch (ClassNotFoundException ex) {
			Logger.getLogger(DialogSelectEmployee.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		pnlSearch = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		tfEmployeeID = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();
		tfFullname = new javax.swing.JTextField();
		jLabel4 = new javax.swing.JLabel();
		cboLocation = new javax.swing.JComboBox();
		jLabel5 = new javax.swing.JLabel();
		cboDepartment = new javax.swing.JComboBox();
		jLabel6 = new javax.swing.JLabel();
		cboProject = new javax.swing.JComboBox();
		btnSearch = new javax.swing.JButton();
		btnSelect = new javax.swing.JButton();
		spnlData = new javax.swing.JScrollPane();
		tblData = new org.jdesktop.swingx.JXTable();

		setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
		setTitle("Select An Employee");
		setAlwaysOnTop(true);
		setMinimumSize(new java.awt.Dimension(640, 480));
		setModal(true);
		setResizable(false);

		pnlSearch.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Calibri", 1, 12))); // NOI18N
		pnlSearch.setPreferredSize(new java.awt.Dimension(640, 200));
		pnlSearch.setRequestFocusEnabled(false);

		jLabel1.setText("Employee ID:");

		jLabel2.setText("Full name:");

		jLabel4.setText("Location:");

		cboLocation.setModel(
				new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
		cboLocation.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cboLocationActionPerformed(evt);
			}
		});

		jLabel5.setText("Department");

		cboDepartment.setModel(
				new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

		jLabel6.setText("Project");

		cboProject.setModel(
				new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

		btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_search.png"))); // NOI18N
		btnSearch.setText("Search");
		btnSearch.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSearchActionPerformed(evt);
			}
		});

		btnSelect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Select.png"))); // NOI18N
		btnSelect.setText("Select");
		btnSelect.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSelectActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout pnlSearchLayout = new javax.swing.GroupLayout(pnlSearch);
		pnlSearch.setLayout(pnlSearchLayout);
		pnlSearchLayout.setHorizontalGroup(pnlSearchLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnlSearchLayout.createSequentialGroup().addContainerGap().addGroup(pnlSearchLayout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
						.addGroup(pnlSearchLayout.createSequentialGroup().addComponent(btnSelect)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(btnSearch))
						.addGroup(pnlSearchLayout.createSequentialGroup()
								.addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(pnlSearchLayout.createSequentialGroup()
												.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(tfEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 150,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60,
														Short.MAX_VALUE)
												.addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(pnlSearchLayout.createSequentialGroup()
												.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(tfFullname, javax.swing.GroupLayout.PREFERRED_SIZE, 150,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60,
														Short.MAX_VALUE)
												.addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING,
												javax.swing.GroupLayout.PREFERRED_SIZE, 90,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(10, 10, 10)
								.addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(cboProject, javax.swing.GroupLayout.PREFERRED_SIZE, 150,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(cboDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 150,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(cboLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 150,
												javax.swing.GroupLayout.PREFERRED_SIZE))))
						.addContainerGap(36, Short.MAX_VALUE)));

		pnlSearchLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL,
				new java.awt.Component[] { tfEmployeeID, tfFullname });

		pnlSearchLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL,
				new java.awt.Component[] { btnSearch, btnSelect });

		pnlSearchLayout
				.setVerticalGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(pnlSearchLayout.createSequentialGroup().addGroup(pnlSearchLayout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1)
								.addComponent(tfEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel4).addComponent(cboLocation, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSearchLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(tfFullname, javax.swing.GroupLayout.PREFERRED_SIZE, 20,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(cboDepartment, javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jLabel5))
										.addComponent(jLabel2))
								.addGap(18, 18, 18)
								.addGroup(
										pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(cboProject, javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jLabel6))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(btnSearch).addComponent(btnSelect))
								.addContainerGap(42, Short.MAX_VALUE)));

		pnlSearchLayout.linkSize(javax.swing.SwingConstants.VERTICAL,
				new java.awt.Component[] { tfEmployeeID, tfFullname });

		pnlSearchLayout.linkSize(javax.swing.SwingConstants.VERTICAL,
				new java.awt.Component[] { btnSearch, btnSelect });

		getContentPane().add(pnlSearch, java.awt.BorderLayout.PAGE_START);

		tblData.setModel(
				new javax.swing.table.DefaultTableModel(
						new Object[][] { { null, null, null, null }, { null, null, null, null },
								{ null, null, null, null }, { null, null, null, null } },
						new String[] { "Title 1", "Title 2", "Title 3", "Title 4" }));
		tblData.setFont(new java.awt.Font("Calibri", 1, 14));
		spnlData.setViewportView(tblData);

		getContentPane().add(spnlData, java.awt.BorderLayout.CENTER);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSearchActionPerformed
		loadData();
	}// GEN-LAST:event_btnSearchActionPerformed

	private void loadData() {// Tải dữ liệu vào bảng
		try {
			/* Nhận dữ liệu */
			empLst = null;
			empLst = EmployeeDAO.selectAllEmployeeByCondition(makeConditionString());

			String[] cols = new String[] { "ID", "Full Name", "Username", "Location", "Department", "Project" };
			mdlTable = new DefaultTableModel(null, cols);

			for (Employee emp : empLst) {
				Vector row = new Vector();
				row.add(emp.getEmployeeID());
				row.add(emp.getEmployeeName());
				row.add(emp.getUsername());
				row.add(emp.getLocation().getLocationName());
				row.add(emp.getDepartment().getDepartmentName());
				row.add(emp.getProject().getProjectName());

				mdlTable.addRow(row);
			}
			tblData.setModel(mdlTable);

		} catch (ClassNotFoundException ex) {
			Logger.getLogger(DialogSelectEmployee.class.getName()).log(Level.SEVERE, null, ex);
		} catch (SQLException ex) {
			Logger.getLogger(DialogSelectEmployee.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

	private String makeConditionString() {// Tạo chuỗi điều kiện đầu vào
		StringBuilder condition = new StringBuilder();
		condition.append(" 1=1 ");
		int dept = cboDepartment.getSelectedIndex() - 1;
		int location = cboLocation.getSelectedIndex() - 1;
		int project = cboProject.getSelectedIndex() - 1;

		/* Thực hiện chuỗi đk từ ComboBoxes */
		if (dept >= 0) {
			condition.append(" AND Employees.DepartmentID = ");
			condition.append(departmentLst.get(dept).getDepartmentID());
		}
		if (location >= 0) {
			condition.append(" AND Employees.LocationID = ");
			condition.append(locationLst.get(location).getLocationID());
		}
		if (project >= 0) {
			condition.append(" AND Employees.ProjectID = ");
			condition.append(projectLst.get(project).getProjectID());
		}

		/* Nhân viên */
		String empID = tfEmployeeID.getText();
		if (ValidateFormTools.isInteger(empID) != null) {
			condition.append(" AND Employees.EmployeeID = ");
			condition.append(Integer.parseInt(empID));
		}

		/* Tạo cơ sở đk cho Tên đầy đủ */
		String empName = tfFullname.getText().trim();
		if (empName.compareTo("") != 0) {
			while (empName.contains("  ")) {
				empName = empName.replace("  ", " ");
			} // Bình thườn hóa chuỗi đầu vào

			empName = empName.replace(" ", "%' OR Employees.EmployeeName LIKE N'%");

			StringBuilder empNameCond = new StringBuilder();
			empNameCond.append(" AND (Employees.EmployeeName LIKE N'%");
			empNameCond.append(empName);
			empNameCond.append("%' )");
			condition.append(empNameCond.toString());
		}

		return condition.toString();
	}

	private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSelectActionPerformed

		if (tblData.getSelectedRow() != -1)// Kiểm tra người dùng có chọn một hàng nào không
		{
			selectedEmp = empLst.get(tblData.getSelectedRow());
			this.dispose();
		} else {
			JOptionPane.showMessageDialog(null, "You must select a row!", "No row is selected!",
					JOptionPane.INFORMATION_MESSAGE);
		}
	}// GEN-LAST:event_btnSelectActionPerformed

	private void cboLocationActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cboLocationActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_cboLocationActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {
				DialogSelectEmployee dialog = new DialogSelectEmployee(new javax.swing.JFrame(), true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {

					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

	public static Employee showSelectEmployeeDialog(Frame parent) {
		DialogSelectEmployee dialog = new DialogSelectEmployee(parent, true);
		dialog.setVisible(true);
		return dialog.selectedEmp;
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnSearch;
	private javax.swing.JButton btnSelect;
	private javax.swing.JComboBox cboDepartment;
	private javax.swing.JComboBox cboLocation;
	private javax.swing.JComboBox cboProject;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JPanel pnlSearch;
	private javax.swing.JScrollPane spnlData;
	public org.jdesktop.swingx.JXTable tblData;
	private javax.swing.JTextField tfEmployeeID;
	private javax.swing.JTextField tfFullname;
	// End of variables declaration//GEN-END:variables
}
