
package UI;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import Dao.LocationDAO;
import Entity.*;
import Util.ValidateFormTools;

import java.sql.SQLException;
import java.util.List;
import java.util.Vector;

public class PnlAdminLocationManage extends javax.swing.JPanel {

	/** Creates new form ManageLocation */
	public PnlAdminLocationManage() {
		initComponents();
		tblModel = new DefaultTableModel();
		loadTableData();

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		pnlTop = new javax.swing.JPanel();
		pnlAdd = new javax.swing.JPanel();
		jLabel2 = new javax.swing.JLabel();
		tfAddLocationName = new javax.swing.JTextField();
		btnAddNew = new javax.swing.JButton();
		pnlEdit = new javax.swing.JPanel();
		btnDelete = new javax.swing.JButton();
		btnSave = new javax.swing.JButton();
		jLabel3 = new javax.swing.JLabel();
		tfEditLocationId = new javax.swing.JTextField();
		jLabel4 = new javax.swing.JLabel();
		tfEditLocationName = new javax.swing.JTextField();
		pnlBottom = new javax.swing.JPanel();
		spnlLocationData = new javax.swing.JScrollPane();
		spnlLocationData1 = new javax.swing.JScrollPane();
		tblData = new org.jdesktop.swingx.JXTable();

		setMaximumSize(new java.awt.Dimension(600, 600));
		setMinimumSize(new java.awt.Dimension(600, 600));
		setPreferredSize(new java.awt.Dimension(600, 600));
		setLayout(new java.awt.BorderLayout());

		pnlTop.setLayout(new java.awt.BorderLayout());

		pnlAdd.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Calibri", 1, 12))); // NOI18N
		pnlAdd.setPreferredSize(new java.awt.Dimension(554, 120));

		jLabel2.setText("Location:");

		tfAddLocationName.setMaximumSize(null);

		btnAddNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_add.png"))); // NOI18N
		btnAddNew.setText("Add");
		btnAddNew.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnAddNewActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout pnlAddLayout = new javax.swing.GroupLayout(pnlAdd);
		pnlAdd.setLayout(pnlAddLayout);
		pnlAddLayout.setHorizontalGroup(pnlAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnlAddLayout.createSequentialGroup().addContainerGap()
						.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(10, 10, 10)
						.addComponent(tfAddLocationName, javax.swing.GroupLayout.PREFERRED_SIZE, 200,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(18, 18, 18).addComponent(btnAddNew, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(341, 341, 341)));
		pnlAddLayout.setVerticalGroup(pnlAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnlAddLayout.createSequentialGroup().addContainerGap()
						.addGroup(pnlAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(tfAddLocationName, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btnAddNew))
						.addContainerGap(58, Short.MAX_VALUE)));

		pnlTop.add(pnlAdd, java.awt.BorderLayout.NORTH);

		pnlEdit.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Edit",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Calibri", 1, 12))); // NOI18N
		pnlEdit.setPreferredSize(new java.awt.Dimension(554, 150));

		btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_delete.png"))); // NOI18N
		btnDelete.setText("Delete");
		btnDelete.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnDeleteActionPerformed(evt);
			}
		});

		btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_save.png"))); // NOI18N
		btnSave.setText("LÆ°u");
		btnSave.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSaveActionPerformed(evt);
			}
		});

		jLabel3.setText("Location ID:");

		tfEditLocationId.setEditable(false);
		tfEditLocationId.setEnabled(false);
		tfEditLocationId.setMaximumSize(null);

		jLabel4.setText("Location Name:");

		tfEditLocationName.setMaximumSize(null);

		javax.swing.GroupLayout pnlEditLayout = new javax.swing.GroupLayout(pnlEdit);
		pnlEdit.setLayout(pnlEditLayout);
		pnlEditLayout.setHorizontalGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnlEditLayout.createSequentialGroup().addContainerGap()
						.addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(tfEditLocationId, javax.swing.GroupLayout.PREFERRED_SIZE, 200,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(tfEditLocationName, javax.swing.GroupLayout.PREFERRED_SIZE, 200,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(18, 18, 18)
						.addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(153, 153, 153)));
		pnlEditLayout.setVerticalGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnlEditLayout.createSequentialGroup().addContainerGap()
						.addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btnSave)
								.addComponent(tfEditLocationId, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 17,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btnDelete).addComponent(tfEditLocationName,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap(65, Short.MAX_VALUE)));

		pnlTop.add(pnlEdit, java.awt.BorderLayout.CENTER);

		add(pnlTop, java.awt.BorderLayout.NORTH);

		pnlBottom.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "List Location",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Calibri", 1, 15))); // NOI18N
		pnlBottom.setLayout(new java.awt.BorderLayout());

		spnlLocationData.setBorder(null);

		spnlLocationData1.setBorder(null);

		tblData.setModel(
				new javax.swing.table.DefaultTableModel(
						new Object[][] { { null, null, null, null }, { null, null, null, null },
								{ null, null, null, null }, { null, null, null, null } },
						new String[] { "Title 1", "Title 2", "Title 3", "Title 4" }));
		tblData.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				tblDataMouseClicked(evt);
			}
		});
		tblData.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyReleased(java.awt.event.KeyEvent evt) {
				tblDataKeyReleased(evt);
			}
		});
		spnlLocationData1.setViewportView(tblData);

		spnlLocationData.setViewportView(spnlLocationData1);

		pnlBottom.add(spnlLocationData, java.awt.BorderLayout.CENTER);

		add(pnlBottom, java.awt.BorderLayout.CENTER);
	}// </editor-fold>//GEN-END:initComponents

	private void btnAddNewActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAddNewActionPerformed
		if (validateAddNew()) {
			Location locationObj = new Location();
			locationObj.setLocationName(tfAddLocationName.getText());

			try {
				LocationDAO.insertLocation(locationObj);
				JOptionPane.showMessageDialog(null, "Insert Success!");
				loadTableData();
				tfAddLocationName.setText("");
			} catch (SQLException ex) {
				JOptionPane.showMessageDialog(null, "Cannot insert new Project in database!", "Error", JOptionPane.ERROR_MESSAGE);
			} catch (ClassNotFoundException ex) {
				JOptionPane.showMessageDialog(null, "Cannot insert new Project in database!", "Error", JOptionPane.ERROR_MESSAGE);
			}
		}
	}// GEN-LAST:event_btnAddNewActionPerformed

	private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSaveActionPerformed
		if (tfEditLocationId.getText().compareTo("") != 0) {
			if (validateUpdate()) {
				Location location = new Location();
				location.setLocationID(Integer.parseInt(tfEditLocationId.getText()));
				location.setLocationName(tfEditLocationName.getText());
				try {
					LocationDAO.updateLocation(location);

					tfEditLocationId.setText("");
					tfEditLocationName.setText("");
					loadTableData();
				} catch (SQLException ex) {
					JOptionPane.showMessageDialog(null, "Can not edit this Location!", "Edit failed",
							JOptionPane.ERROR_MESSAGE);
				} catch (ClassNotFoundException ex) {
					JOptionPane.showMessageDialog(null, "Can not edit this Location!", "Edit failed",
							JOptionPane.ERROR_MESSAGE);
				}
			}
		} else {
			JOptionPane.showMessageDialog(null, "You must select a row!", "No row selected",
					JOptionPane.INFORMATION_MESSAGE);
		}
	}// GEN-LAST:event_btnSaveActionPerformed

	private void tblDataKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_tblDataKeyReleased
		loadEditData();
	}// GEN-LAST:event_tblDataKeyReleased

	private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tblDataMouseClicked
		loadEditData();
	}// GEN-LAST:event_tblDataMouseClicked

	private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnDeleteActionPerformed
		if (tfEditLocationId.getText().compareTo("") != 0) {
			if (validateDelete()) {// Ensure there are no Employee belong to this role
				if (JOptionPane.showConfirmDialog(null, "Dou you want to delete Location?", "Confirm delete",
						JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
					/**/ try {
						LocationDAO.deleteLocation(Integer.parseInt(tfEditLocationId.getText()));
						JOptionPane.showMessageDialog(null, "Delete success!");
						loadTableData();

						tfEditLocationId.setText("");
						tfEditLocationName.setText("");

					} catch (SQLException ex) {
						JOptionPane.showMessageDialog(null, "Delete failed!", "Error",
								JOptionPane.ERROR_MESSAGE);
					} catch (ClassNotFoundException ex) {
						JOptionPane.showMessageDialog(null, "Delete failed!", "Error",
								JOptionPane.ERROR_MESSAGE);
						/**/ }
				}
			}
		}
	}// GEN-LAST:event_btnDeleteActionPerformed

	private boolean validateDelete() {
		int rowIndex = tblData.getSelectedRow();
		Location location = locationList.get(rowIndex);

		if (location.getFromTransferCount() == 0 && location.getNumberOfEmployees() == 0
				&& location.getToTransferCount() == 0)// Ensure there are no depending Object
		{
			return true;
		} else {
			JOptionPane.showMessageDialog(null, "You can not delete this Location! Epmloyee working in there!",
					"Lá»i xÃ³a", JOptionPane.ERROR_MESSAGE);
			return false;
		}
	}

	private void loadEditData()// Nháº­n dá»¯ liá»u tá»« báº£ng Äá» chá»nh sá»­a , khi ngÆ°á»i dÃ¹ng click vÃ o má»t hÃ ng hoáº·c sá»­
								// dá»¥ng phÃ­m lÃªn / xuá»ng
	{
		int rowIndex = tblData.getSelectedRow();
		if (rowIndex != -1) {
			Location location = locationList.get(rowIndex);
			tfEditLocationId.setText(String.valueOf(location.getLocationID()));
			tfEditLocationName.setText(location.getLocationName());
		}
	}

	private boolean validateAddNew() {
		String msg = "";
		if (!ValidateFormTools.isFilledTextField(tfAddLocationName, true))// cáº¯t cÃ¡c vÄn báº£n trong tfAddDepartmentName,
																			// kiá»m tra trá»ng , check blank
		{
			msg += "\n- Location's name cannot be blank!";
		}
		tfAddLocationName.setText(tfAddLocationName.getText().trim());
		/* If there are error : Diplay error */
		if (msg.compareTo("") != 0) {
			JOptionPane.showMessageDialog(null, "Has an error " + msg, "Error", JOptionPane.ERROR_MESSAGE);
			return false;
		} else {
			return true;
		}
	}

	private boolean validateUpdate() {
		String msg = "";
		if (!ValidateFormTools.isFilledTextField(tfEditLocationName, true)) {
			msg += "\n- Location's name cannot be blank!";
		}
		tfEditLocationName.setText(tfEditLocationName.getText().trim());

		/* If there are error : Diplay error */
		if (msg.compareTo("") != 0) {
			JOptionPane.showMessageDialog(null, "Has an error" + msg, "Error", JOptionPane.ERROR_MESSAGE);
			return false;
		} else {
			return true;
		}
	}

	private void loadTableData() {
		try {
			locationList = LocationDAO.selectAllLocation();
			tblModel = new DefaultTableModel();
			tblModel.addColumn("Location ID");
			tblModel.addColumn("Location Name");
			tblModel.addColumn("Number Employee");
			for (Location location : locationList) {
				Vector<String> row = new Vector<String>();
				row.addElement(String.valueOf(location.getLocationID()));
				row.addElement(location.getLocationName());
				row.addElement(String.valueOf(location.getNumberOfEmployees()));
				tblModel.addRow(row);
			}
			tblData.setModel(tblModel);
		} catch (ClassNotFoundException ex) {
			JOptionPane.showMessageDialog(null, "Can not load Location's data from database!", "Error", JOptionPane.ERROR_MESSAGE);
			ex.printStackTrace();
		} catch (SQLException ex) {
			JOptionPane.showMessageDialog(null, "Can not load Location's data from database!", "Error", JOptionPane.ERROR_MESSAGE);
			ex.printStackTrace();
		}

	}

	DefaultTableModel tblModel;
	List<Location> locationList;
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnAddNew;
	private javax.swing.JButton btnDelete;
	private javax.swing.JButton btnSave;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JPanel pnlAdd;
	private javax.swing.JPanel pnlBottom;
	private javax.swing.JPanel pnlEdit;
	private javax.swing.JPanel pnlTop;
	private javax.swing.JScrollPane spnlLocationData;
	private javax.swing.JScrollPane spnlLocationData1;
	private org.jdesktop.swingx.JXTable tblData;
	private javax.swing.JTextField tfAddLocationName;
	private javax.swing.JTextField tfEditLocationId;
	private javax.swing.JTextField tfEditLocationName;
	// End of variables declaration//GEN-END:variables
}
